{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: null,\n    user: null\n  });\n  const navigate = useNavigate();\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n  const handleLogin = async credentials => {\n    try {\n      var _response$data, _response$data$data;\n      // Configure axios instance with retry logic\n      const axiosInstance = axios.create({\n        baseURL: 'https://api.freeapi.app/api/v1',\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n\n      // Add retry interceptor\n      axiosInstance.interceptors.response.use(null, async error => {\n        if (error.config && !error.config.__isRetryRequest) {\n          error.config.__isRetryRequest = true;\n          return axiosInstance(error.config);\n        }\n        return Promise.reject(error);\n      });\n      const response = await axiosInstance.post('/auth/login', credentials);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.token) {\n        const userData = response.data.data;\n        setAuth({\n          token: userData.token,\n          user: userData.user,\n          isAuthenticated: true\n        });\n        localStorage.setItem('token', userData.token);\n        localStorage.setItem('user', JSON.stringify(userData.user));\n        navigate('/dashboard');\n        return userData;\n      }\n      throw new Error('Authentication service response invalid');\n    } catch (error) {\n      const errorMessage = 'Authentication service is temporarily unavailable. Please try again in a few minutes.';\n      console.error('Login error details:', errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    setAuth({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n    navigate('/login', {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n    if (token && user && isAuthenticated) {\n      setAuth({\n        token,\n        user,\n        isAuthenticated: true\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      handleLogin,\n      getToken,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iABIvfHahP0gyHBpH1gmj66zUnQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","user","navigate","getToken","localStorage","getItem","handleLogin","credentials","_response$data","_response$data$data","axiosInstance","create","baseURL","timeout","headers","interceptors","response","use","error","config","__isRetryRequest","Promise","reject","post","data","userData","isAuthenticated","setItem","JSON","stringify","Error","errorMessage","console","logout","removeItem","replace","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const navigate = useNavigate();\r\n\r\n    const getToken = () => {\r\n        return localStorage.getItem('token');\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        try {\r\n            // Configure axios instance with retry logic\r\n            const axiosInstance = axios.create({\r\n                baseURL: 'https://api.freeapi.app/api/v1',\r\n                timeout: 10000,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n\r\n            // Add retry interceptor\r\n            axiosInstance.interceptors.response.use(null, async error => {\r\n                if (error.config && !error.config.__isRetryRequest) {\r\n                    error.config.__isRetryRequest = true;\r\n                    return axiosInstance(error.config);\r\n                }\r\n                return Promise.reject(error);\r\n            });\r\n\r\n            const response = await axiosInstance.post('/auth/login', credentials);\r\n            \r\n            if (response.data?.data?.token) {\r\n                const userData = response.data.data;\r\n                setAuth({\r\n                    token: userData.token,\r\n                    user: userData.user,\r\n                    isAuthenticated: true\r\n                });\r\n\r\n                localStorage.setItem('token', userData.token);\r\n                localStorage.setItem('user', JSON.stringify(userData.user));\r\n                \r\n                navigate('/dashboard');\r\n                return userData;\r\n            }\r\n            \r\n            throw new Error('Authentication service response invalid');\r\n        } catch (error) {\r\n            const errorMessage = 'Authentication service is temporarily unavailable. Please try again in a few minutes.';\r\n            console.error('Login error details:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };    \r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('isAuthenticated');\r\n        setAuth({ user: null, token: null, isAuthenticated: false });\r\n        navigate('/login', { replace: true });\r\n    };    \r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n\r\n        if (token && user && isAuthenticated) {\r\n            setAuth({\r\n                token,\r\n                user,\r\n                isAuthenticated: true\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth,\r\n            setAuth,\r\n            handleLogin,\r\n            getToken,\r\n            logout\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}