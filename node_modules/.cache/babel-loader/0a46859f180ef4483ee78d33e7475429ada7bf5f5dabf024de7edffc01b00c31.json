{"ast":null,"code":"import React,{useState}from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import axios from'axios';import{useNavigate}from'react-router-dom';import{useAuth}from'./AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const navigate=useNavigate();const{handleLogin}=useAuth();const[serverError,setServerError]=useState('');const initialValues={username:'',email:'',password:''};const validationSchema=Yup.object({username:Yup.string().min(3,'Username must be at least 3 characters').max(20,'Username must not exceed 20 characters').required('Required').matches(/^[a-z]+$/,'Username must be in lowercase'),email:Yup.string().email('Invalid email format').required('Required'),password:Yup.string().min(8,'Password must be at least 8 characters').matches(/[A-Z]/,'Must contain at least one uppercase letter').matches(/[a-z]/,'Must contain at least one lowercase letter').matches(/[0-9]/,'Must contain at least one number').matches(/[!@#$%^&*(),.?\":{}|<>]/,'Must contain at least one special character')});const handleSubmit=async values=>{try{const response=await axios.post('https://api.freeapi.app/api/v1/users/register',values);const{user,token}=response.data.data;localStorage.setItem('user',JSON.stringify(user));navigate('/dashboard');}catch(error){var _error$response,_error$response$data,_error$response$data$;console.error('Signup failed:',error);setServerError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:(_error$response$data$=_error$response$data.data)===null||_error$response$data$===void 0?void 0:_error$response$data$.message)||'Signup failed. Please try again later.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen bg-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-md p-8 bg-white rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-center mb-6\",children:\"Signup\"}),serverError&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 text-red-500 text-center\",children:serverError}),/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Username\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"username\",placeholder:\"Enter your username\",className:\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"username\",component:\"div\",className:\"text-red-500 text-sm\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Email\"}),/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\",placeholder:\"Enter your email\",className:\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\",className:\"text-red-500 text-sm\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Password\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\",placeholder:\"Enter your password\",className:\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"div\",className:\"text-red-500 text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full py-2 mt-4 text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-all\",children:\"Signup\"})]})})]})});};export default Signup;","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","Signup","navigate","handleLogin","serverError","setServerError","initialValues","username","email","password","validationSchema","object","string","min","max","required","matches","handleSubmit","values","response","post","user","token","data","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","_error$response$data$","console","message","className","children","onSubmit","type","name","placeholder","component"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst Signup = () => {\r\n    const navigate = useNavigate();\r\n    const { handleLogin } = useAuth();\r\n    const [serverError, setServerError] = useState('');\r\n\r\n    const initialValues = { username: '', email: '', password: '' };\r\n\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string()\r\n            .min(3, 'Username must be at least 3 characters')\r\n            .max(20, 'Username must not exceed 20 characters')\r\n            .required('Required')\r\n            .matches(/^[a-z]+$/, 'Username must be in lowercase'),\r\n        email: Yup.string().email('Invalid email format').required('Required'),\r\n        password: Yup.string()\r\n            .min(8, 'Password must be at least 8 characters')\r\n            .matches(/[A-Z]/, 'Must contain at least one uppercase letter')\r\n            .matches(/[a-z]/, 'Must contain at least one lowercase letter')\r\n            .matches(/[0-9]/, 'Must contain at least one number')\r\n            .matches(/[!@#$%^&*(),.?\":{}|<>]/, 'Must contain at least one special character')\r\n    });    const handleSubmit = async (values) => {\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/register', values);\r\n            const { user, token } = response.data.data;\r\n\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n\r\n            navigate('/dashboard');\r\n\r\n        } catch (error) {\r\n            console.error('Signup failed:', error);\r\n            setServerError(error.response?.data?.data?.message || 'Signup failed. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n            <div className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-md\">\r\n                <h2 className=\"text-2xl font-bold text-center mb-6\">Signup</h2>\r\n                {serverError && <div className=\"mb-4 text-red-500 text-center\">{serverError}</div>}\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n                    <Form>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-medium text-gray-700\">Username</label>\r\n                            <Field type=\"text\" name=\"username\" placeholder=\"Enter your username\" className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" />\r\n                            <ErrorMessage name=\"username\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n                            <Field type=\"password\" name=\"password\" placeholder=\"Enter your password\" className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"w-full py-2 mt-4 text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-all\">Signup</button>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}