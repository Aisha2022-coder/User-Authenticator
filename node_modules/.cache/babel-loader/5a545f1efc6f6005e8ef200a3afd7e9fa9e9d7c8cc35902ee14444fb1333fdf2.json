{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: null,\n    user: null\n  });\n  const [loading, setLoading] = useState(true); // Track loading state\n  const navigate = useNavigate();\n\n  // Fetch user data using token\n  const fetchUserData = async token => {\n    console.log('Fetching user data with token:', token); // Debugging: Log the token\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('User data fetched:', response.data); // Debugging: Log the fetched user data\n      setAuth(prev => ({\n        ...prev,\n        user: response.data\n      }));\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      handleAuthError(error);\n    } finally {\n      setLoading(false); // Set loading to false after fetching or error\n    }\n  };\n\n  // Handle login functionality\n  const handleLogin = async credentials => {\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\n      const {\n        user,\n        token,\n        refreshToken\n      } = response.data;\n      if (!user || !token || !refreshToken) {\n        throw new Error('Invalid response format');\n      }\n      login(user, token, refreshToken);\n      navigate('/dashboard');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed. Please try again.');\n    }\n  };\n\n  // Handle authentication errors (expired or invalid token)\n  const handleAuthError = error => {\n    if (error.response && error.response.status === 401 && (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))) {\n      alert('Your session has expired or the token is invalid. Please log in again.');\n      logout();\n      navigate('/login');\n    } else {\n      console.error('Unexpected authentication error:', error.message);\n    }\n  };\n\n  // Perform login action\n  const login = (user, token, refreshToken) => {\n    setAuth({\n      token,\n      user\n    });\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('refreshToken', refreshToken);\n    setLoading(false);\n  };\n\n  // Perform logout action\n  const logout = () => {\n    setAuth({\n      token: null,\n      user: null\n    });\n    setLoading(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('refreshToken');\n    navigate('/login');\n  };\n\n  // Retrieve token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Check token on app load and fetch user data\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      console.log('Token found:', storedToken); // Debugging\n      setAuth(prev => ({\n        ...prev,\n        token: storedToken\n      }));\n      fetchUserData(storedToken);\n    } else {\n      console.log('No token found'); // Debugging\n      setLoading(false);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Refresh token every 15 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // Refresh token every 15 minutes\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  // Handle token refresh\n  const refreshToken = async () => {\n    const storedRefreshToken = localStorage.getItem('refreshToken');\n    if (!storedRefreshToken) {\n      console.error('Refresh token is missing.');\n      logout();\n      navigate('/login');\n      return;\n    }\n    try {\n      console.log('Refreshing token with refreshToken:', storedRefreshToken); // Debugging: Log the refresh token\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\n        token: storedRefreshToken\n      });\n      const {\n        accessToken\n      } = response.data;\n      console.log('New access token received:', accessToken); // Debugging: Log the new access token\n      setAuth(prev => ({\n        ...prev,\n        token: accessToken\n      }));\n      localStorage.setItem('token', accessToken);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      logout();\n      navigate('/login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      loading,\n      login,\n      logout,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"8sHYTCxMXgE4GvGQgwht2zoWZ4k=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","user","loading","setLoading","navigate","fetchUserData","console","log","response","get","headers","Authorization","data","prev","error","handleAuthError","handleLogin","credentials","post","refreshToken","Error","login","_error$response","_error$response2","_error$response2$data","message","alert","status","includes","logout","localStorage","setItem","JSON","stringify","removeItem","getToken","getItem","storedToken","interval","setInterval","clearInterval","storedRefreshToken","accessToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const [loading, setLoading] = useState(true); // Track loading state\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch user data using token\r\n    const fetchUserData = async (token) => {\r\n        console.log('Fetching user data with token:', token); // Debugging: Log the token\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            console.log('User data fetched:', response.data); // Debugging: Log the fetched user data\r\n            setAuth((prev) => ({ ...prev, user: response.data }));\r\n        } catch (error) {\r\n            console.error('Failed to fetch user data:', error);\r\n            handleAuthError(error);\r\n        } finally {\r\n            setLoading(false); // Set loading to false after fetching or error\r\n        }\r\n    };\r\n\r\n    // Handle login functionality\r\n    const handleLogin = async (credentials) => {\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\r\n            const { user, token, refreshToken } = response.data;\r\n            if (!user || !token || !refreshToken) {\r\n                throw new Error('Invalid response format');\r\n            }\r\n            login(user, token, refreshToken);\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response?.data || error.message);\r\n            alert(error.response?.data?.message || 'Login failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    // Handle authentication errors (expired or invalid token)\r\n    const handleAuthError = (error) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))\r\n        ) {\r\n            alert('Your session has expired or the token is invalid. Please log in again.');\r\n            logout();\r\n            navigate('/login');\r\n        } else {\r\n            console.error('Unexpected authentication error:', error.message);\r\n        }\r\n    };\r\n\r\n    // Perform login action\r\n    const login = (user, token, refreshToken) => {\r\n        setAuth({ token, user });\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        setLoading(false);\r\n    };\r\n\r\n    // Perform logout action\r\n    const logout = () => {\r\n        setAuth({ token: null, user: null });\r\n        setLoading(false);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('refreshToken');\r\n        navigate('/login');\r\n    };\r\n\r\n    // Retrieve token from localStorage\r\n    const getToken = () => {\r\n        return localStorage.getItem('token');\r\n    };\r\n\r\n    // Check token on app load and fetch user data\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        if (storedToken) {\r\n            console.log('Token found:', storedToken); // Debugging\r\n            setAuth((prev) => ({ ...prev, token: storedToken }));\r\n            fetchUserData(storedToken);\r\n        } else {\r\n            console.log('No token found'); // Debugging\r\n            setLoading(false);\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n    \r\n\r\n    // Refresh token every 15 minutes\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000); // Refresh token every 15 minutes\r\n\r\n        return () => clearInterval(interval); // Cleanup on component unmount\r\n    }, []);\r\n\r\n    // Handle token refresh\r\n    const refreshToken = async () => {\r\n        const storedRefreshToken = localStorage.getItem('refreshToken');\r\n        if (!storedRefreshToken) {\r\n            console.error('Refresh token is missing.');\r\n            logout();\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        try {\r\n            console.log('Refreshing token with refreshToken:', storedRefreshToken); // Debugging: Log the refresh token\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', { token: storedRefreshToken });\r\n            const { accessToken } = response.data;\r\n            console.log('New access token received:', accessToken); // Debugging: Log the new access token\r\n            setAuth((prev) => ({ ...prev, token: accessToken }));\r\n            localStorage.setItem('token', accessToken);\r\n        } catch (error) {\r\n            console.error('Token refresh failed:', error);\r\n            logout();\r\n            navigate('/login');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, loading, login, logout, handleLogin }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}