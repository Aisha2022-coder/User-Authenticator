{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: null,\n    user: null\n  });\n  const navigate = useNavigate();\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n  const handleLogin = async credentials => {\n    try {\n      var _response$data, _response$data$data;\n      // Add request interceptor to handle API specifics\n      axios.interceptors.request.use(config => {\n        config.headers['Accept'] = 'application/json';\n        return config;\n      });\n      const response = await axios.post('https://api.freeapi.app/api/v1/auth/login', {\n        email: credentials.email,\n        password: credentials.password,\n        // Adding API version header\n        apiVersion: 'v1'\n      });\n\n      // Enhanced response validation\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.token) {\n        const userData = response.data.data;\n        setAuth({\n          token: userData.token,\n          user: userData.user,\n          isAuthenticated: true\n        });\n\n        // Store auth data with expiration\n        const expiresIn = 24 * 60 * 60 * 1000; // 24 hours\n        const expirationTime = new Date().getTime() + expiresIn;\n        localStorage.setItem('token', userData.token);\n        localStorage.setItem('tokenExpiration', expirationTime.toString());\n        localStorage.setItem('user', JSON.stringify(userData.user));\n        navigate('/dashboard');\n        return userData;\n      }\n      throw new Error('Invalid response format from server');\n    } catch (error) {\n      var _error$response;\n      // Enhanced error handling with specific messages\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 ? 'Invalid email or password' : 'Unable to connect to authentication service';\n      console.error('Login error details:', errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    setAuth({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n    navigate('/login', {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n    if (token && user && isAuthenticated) {\n      setAuth({\n        token,\n        user,\n        isAuthenticated: true\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      handleLogin,\n      getToken,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iABIvfHahP0gyHBpH1gmj66zUnQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","user","navigate","getToken","localStorage","getItem","handleLogin","credentials","_response$data","_response$data$data","interceptors","request","use","config","headers","response","post","email","password","apiVersion","data","userData","isAuthenticated","expiresIn","expirationTime","Date","getTime","setItem","toString","JSON","stringify","Error","error","_error$response","errorMessage","status","console","logout","removeItem","replace","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const navigate = useNavigate();\r\n\r\n    const getToken = () => {\r\n        return localStorage.getItem('token');\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        try {\r\n            // Add request interceptor to handle API specifics\r\n            axios.interceptors.request.use(config => {\r\n                config.headers['Accept'] = 'application/json';\r\n                return config;\r\n            });\r\n\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/auth/login', {\r\n                email: credentials.email,\r\n                password: credentials.password,\r\n                // Adding API version header\r\n                apiVersion: 'v1'\r\n            });\r\n            \r\n            // Enhanced response validation\r\n            if (response.data?.data?.token) {\r\n                const userData = response.data.data;\r\n                setAuth({\r\n                    token: userData.token,\r\n                    user: userData.user,\r\n                    isAuthenticated: true\r\n                });\r\n                \r\n                // Store auth data with expiration\r\n                const expiresIn = 24 * 60 * 60 * 1000; // 24 hours\r\n                const expirationTime = new Date().getTime() + expiresIn;\r\n                \r\n                localStorage.setItem('token', userData.token);\r\n                localStorage.setItem('tokenExpiration', expirationTime.toString());\r\n                localStorage.setItem('user', JSON.stringify(userData.user));\r\n                \r\n                navigate('/dashboard');\r\n                return userData;\r\n            }\r\n            \r\n            throw new Error('Invalid response format from server');\r\n        } catch (error) {\r\n            // Enhanced error handling with specific messages\r\n            const errorMessage = error.response?.status === 401 \r\n                ? 'Invalid email or password'\r\n                : 'Unable to connect to authentication service';\r\n                \r\n            console.error('Login error details:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };    \r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('isAuthenticated');\r\n        setAuth({ user: null, token: null, isAuthenticated: false });\r\n        navigate('/login', { replace: true });\r\n    };    \r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n\r\n        if (token && user && isAuthenticated) {\r\n            setAuth({\r\n                token,\r\n                user,\r\n                isAuthenticated: true\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth,\r\n            setAuth,\r\n            handleLogin,\r\n            getToken,\r\n            logout\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}