{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: null,\n    user: null\n  });\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(false); // Define loading state\n\n  const fetchUserData = async token => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data); // Set user data directly\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      handleAuthError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAuthError = error => {\n    if (error.response && error.response.status === 401 && (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))) {\n      alert('Your session has expired or the token is invalid. Please log in again.');\n      logout();\n    } else {\n      console.error('Unexpected authentication error:', error.message);\n    }\n  };\n  const handleLogin = async credentials => {\n    console.log('Login credentials:', credentials);\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\n      console.log('Login response:', response.data);\n\n      // Extract and set the token and user\n      const {\n        user,\n        token\n      } = response.data;\n      if (!user || !token) {\n        throw new Error('Invalid response format');\n      }\n      login(user, token); // Save in context\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed. Please try again.');\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await axios.post('https://api.freeapi.app/users/login', credentials);\n      const accessToken = response.data.token; // Extract token\n      const userData = response.data.user; // Extract user data\n\n      // Save token and user data to state\n      setAuth({\n        token: accessToken,\n        user: userData\n      });\n\n      // Store token in localStorage\n      localStorage.setItem('token', accessToken);\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setLoading(false); // Set loading to false on logout\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n    return token;\n  };\n  const refreshToken = async () => {\n    const refreshToken = localStorage.getItem('refreshToken');\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\n        token: refreshToken\n      });\n      const {\n        accessToken\n      } = response.data;\n\n      // Update token in context and localStorage\n      setToken(accessToken);\n      localStorage.setItem('token', accessToken);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      logout(); // Log out if refresh fails\n    }\n  };\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    console.log('Token from localStorage:', storedToken); // Log token here\n    if (storedToken) {\n      setAuth(prev => ({\n        ...prev,\n        token: storedToken\n      }));\n      fetchUserData(storedToken);\n    }\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // Refresh token every 15 minutes\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"U7GkqTRZEtAD0x1fslm56D+L93U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","user","setUser","setToken","loading","setLoading","fetchUserData","response","get","headers","Authorization","data","error","console","handleAuthError","status","message","includes","alert","logout","handleLogin","credentials","log","post","Error","login","_error$response","_error$response2","_error$response2$data","accessToken","userData","localStorage","setItem","removeItem","getToken","getItem","refreshToken","storedToken","prev","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [loading, setLoading] = useState(false); // Define loading state\r\n\r\n    const fetchUserData = async (token) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setUser(response.data); // Set user data directly\r\n        } catch (error) {\r\n            console.error('Failed to fetch user data:', error);\r\n            handleAuthError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAuthError = (error) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))\r\n        ) {\r\n            alert('Your session has expired or the token is invalid. Please log in again.');\r\n            logout();\r\n        } else {\r\n            console.error('Unexpected authentication error:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        console.log('Login credentials:', credentials);\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\r\n            console.log('Login response:', response.data);\r\n\r\n            // Extract and set the token and user\r\n            const { user, token } = response.data;\r\n            if (!user || !token) {\r\n                throw new Error('Invalid response format');\r\n            }\r\n\r\n            login(user, token); // Save in context\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response?.data || error.message);\r\n            alert(error.response?.data?.message || 'Login failed. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    const login = async (credentials) => {\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/users/login', credentials);\r\n            const accessToken = response.data.token;  // Extract token\r\n            const userData = response.data.user;      // Extract user data\r\n    \r\n            // Save token and user data to state\r\n            setAuth({ token: accessToken, user: userData });\r\n    \r\n            // Store token in localStorage\r\n            localStorage.setItem('token', accessToken);\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        setLoading(false); // Set loading to false on logout\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    const getToken = () => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token:', token);\r\n        return token;\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', { token: refreshToken });\r\n            const { accessToken } = response.data;\r\n\r\n            // Update token in context and localStorage\r\n            setToken(accessToken);\r\n            localStorage.setItem('token', accessToken);\r\n        } catch (error) {\r\n            console.error('Token refresh failed:', error);\r\n            logout(); // Log out if refresh fails\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        console.log('Token from localStorage:', storedToken); // Log token here\r\n        if (storedToken) {\r\n            setAuth((prev) => ({ ...prev, token: storedToken }));\r\n            fetchUserData(storedToken);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000); // Refresh token every 15 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}