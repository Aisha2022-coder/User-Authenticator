{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// ProtectedRoute.js (or PrivateRoute.js)\nimport React from 'react';\nimport { Navigate } from 'react-router-dom'; // Import Navigate from react-router-dom\nimport { useAuth } from './AuthContext'; // Assuming you're using AuthContext for auth state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    auth\n  } = useAuth(); // Get auth state from context\n\n  // If no token is found, redirect to the login page\n  if (!auth.token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If the token exists, render the children (protected page)\n  return children;\n};\n_s(ProtectedRoute, \"9G6mHm7vboz57TgCjHTTsyGOOp0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","auth","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js (or PrivateRoute.js)\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';  // Import Navigate from react-router-dom\r\nimport { useAuth } from './AuthContext';  // Assuming you're using AuthContext for auth state\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { auth } = useAuth();  // Get auth state from context\r\n\r\n    // If no token is found, redirect to the login page\r\n    if (!auth.token) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // If the token exists, render the children (protected page)\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAE;AAC9C,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAE;;EAE7B;EACA,IAAI,CAACM,IAAI,CAACC,KAAK,EAAE;IACb,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,OAAOT,QAAQ;AACnB,CAAC;AAACC,EAAA,CAVIF,cAAc;EAAA,QACCH,OAAO;AAAA;AAAAc,EAAA,GADtBX,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}