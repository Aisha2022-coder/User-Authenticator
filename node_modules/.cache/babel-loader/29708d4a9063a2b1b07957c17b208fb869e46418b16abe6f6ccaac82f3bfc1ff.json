{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    token: null\n  });\n  const [loading, setLoading] = useState(false); // Add loading state\n\n  const fetchUserData = async token => {\n    setLoading(true); // Set loading to true when fetching user data\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Ensure token is sent correctly\n      });\n      setAuth(prevAuth => ({\n        ...prevAuth,\n        user: response.data\n      }));\n    } catch (error) {\n      console.error('Failed to fetch user data:', error.message);\n      alert('Session expired or user data unavailable. Please log in again.');\n      logout();\n    } finally {\n      setLoading(false); // Mark loading complete\n    }\n  };\n  const login = (user, token) => {\n    setAuth({\n      user,\n      token\n    });\n    localStorage.setItem('token', token); // Save token in localStorage\n    localStorage.setItem('user', JSON.stringify(user)); // Save user details in localStorage\n    console.log('Stored token:', token); // Log the token to verify\n    fetchUserData(token); // Fetch user data after login\n  };\n  const logout = () => {\n    setAuth({\n      user: null,\n      token: null\n    });\n    localStorage.removeItem('token'); // Remove token from localStorage\n    localStorage.removeItem('user'); // Remove user details from localStorage\n  };\n  const refreshToken = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await axios.post('https://api.freeapi.app/users/refresh-token', {\n          token\n        });\n        const newToken = response.data.token;\n        setAuth(prev => ({\n          ...prev,\n          token: newToken\n        }));\n        localStorage.setItem('token', newToken);\n      } catch (error) {\n        console.error('Token refresh failed:', error.message);\n        alert('Session expired. Please log in again.');\n        logout();\n      }\n    }\n  };\n\n  // Automatically fetch user data on initial load if token exists\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserData(token);\n    }\n  }, []);\n\n  // Automatically refresh token every 15 minutes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // Refresh token every 15 minutes\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"TN6G6+ueqrWdINoksWB1O/QUWf8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","user","token","loading","setLoading","fetchUserData","response","get","headers","Authorization","prevAuth","data","error","console","message","alert","logout","login","localStorage","setItem","JSON","stringify","log","removeItem","refreshToken","getItem","post","newToken","prev","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ user: null, token: null });\r\n    const [loading, setLoading] = useState(false); // Add loading state\r\n\r\n    const fetchUserData = async (token) => {\r\n        setLoading(true); // Set loading to true when fetching user data\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: { Authorization: `Bearer ${token}` }, // Ensure token is sent correctly\r\n            });\r\n            setAuth((prevAuth) => ({\r\n                ...prevAuth,\r\n                user: response.data,\r\n            }));\r\n        } catch (error) {\r\n            console.error('Failed to fetch user data:', error.message);\r\n            alert('Session expired or user data unavailable. Please log in again.');\r\n            logout();\r\n        } finally {\r\n            setLoading(false); // Mark loading complete\r\n        }\r\n    };\r\n\r\n    const login = (user, token) => {\r\n        setAuth({ user, token });\r\n        localStorage.setItem('token', token); // Save token in localStorage\r\n        localStorage.setItem('user', JSON.stringify(user)); // Save user details in localStorage\r\n        console.log('Stored token:', token); // Log the token to verify\r\n        fetchUserData(token); // Fetch user data after login\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuth({ user: null, token: null });\r\n        localStorage.removeItem('token'); // Remove token from localStorage\r\n        localStorage.removeItem('user'); // Remove user details from localStorage\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const response = await axios.post('https://api.freeapi.app/users/refresh-token', { token });\r\n                const newToken = response.data.token;\r\n                setAuth((prev) => ({ ...prev, token: newToken }));\r\n                localStorage.setItem('token', newToken);\r\n            } catch (error) {\r\n                console.error('Token refresh failed:', error.message);\r\n                alert('Session expired. Please log in again.');\r\n                logout();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Automatically fetch user data on initial load if token exists\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            fetchUserData(token);\r\n        }\r\n    }, []);\r\n\r\n    // Automatically refresh token every 15 minutes\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000); // Refresh token every 15 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, login, logout, loading }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}