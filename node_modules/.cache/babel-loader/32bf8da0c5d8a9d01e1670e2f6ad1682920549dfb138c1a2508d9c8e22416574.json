{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const fetchUserData = async token => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAuth(prevAuth => ({\n        ...prevAuth,\n        user: response.data\n      }));\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      handleAuthError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAuthError = error => {\n    if (error.response && error.response.status === 401 && (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))) {\n      alert('Your session has expired or the token is invalid. Please log in again.');\n      logout();\n    } else {\n      console.error('Unexpected authentication error:', error.message);\n    }\n  };\n  const handleLogin = async credentials => {\n    console.log('Login credentials:', credentials);\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\n      console.log('Login response:', response.data);\n\n      // Extract and set the token and user\n      const {\n        user,\n        token\n      } = response.data;\n      if (!user || !token) {\n        throw new Error('Invalid response format');\n      }\n      login(user, token); // Save in context\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed. Please try again.');\n    }\n  };\n  const login = (userData, accessToken) => {\n    setUser(userData);\n    setToken(accessToken);\n    if (!token || token.trim() === '') {\n      console.error('Invalid token provided during login.');\n      alert('Login failed. Please try again.');\n      return;\n    }\n    console.log('Setting auth state with user and token:', {\n      user,\n      token\n    }); // Debug log\n    setAuth({\n      user,\n      token\n    }); // Update auth state\n    localStorage.setItem('token', token); // Persist token\n    localStorage.setItem('user', JSON.stringify(user)); // Persist user data\n\n    fetchUserData(token);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const refreshToken = async () => {\n    const token = localStorage.getItem('refreshToken');\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\n        token\n      });\n      const {\n        accessToken\n      } = response.data;\n\n      // Update token in context and localStorage\n      setAuth(prevAuth => ({\n        ...prevAuth,\n        token: accessToken\n      }));\n      localStorage.setItem('token', accessToken);\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      logout(); // Log out if refresh fails\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserData(token);\n    }\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"BuoA/WFPlUCM+Ry6vdRIDKuf2zg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","fetchUserData","setLoading","response","get","headers","Authorization","setAuth","prevAuth","data","error","console","handleAuthError","status","message","includes","alert","logout","handleLogin","credentials","log","post","Error","login","_error$response","_error$response2","_error$response2$data","userData","accessToken","trim","localStorage","setItem","JSON","stringify","removeItem","refreshToken","getItem","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser ] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n\r\n    const fetchUserData = async (token) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setAuth((prevAuth) => ({\r\n                ...prevAuth,\r\n                user: response.data,\r\n            }));\r\n        } catch (error) {\r\n            console.error('Failed to fetch user data:', error);\r\n            handleAuthError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAuthError = (error) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))\r\n        ) {\r\n            alert('Your session has expired or the token is invalid. Please log in again.');\r\n            logout();\r\n        } else {\r\n            console.error('Unexpected authentication error:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        console.log('Login credentials:', credentials);\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials);\r\n            console.log('Login response:', response.data);\r\n\r\n            // Extract and set the token and user\r\n            const { user, token } = response.data;\r\n            if (!user || !token) {\r\n                throw new Error('Invalid response format');\r\n            }\r\n\r\n            login(user, token); // Save in context\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response?.data || error.message);\r\n            alert(error.response?.data?.message || 'Login failed. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    const login = (userData, accessToken) => {\r\n        setUser (userData);\r\n        setToken(accessToken);\r\n        if (!token || token.trim() === '') {\r\n            console.error('Invalid token provided during login.');\r\n            alert('Login failed. Please try again.');\r\n            return;\r\n        }\r\n\r\n        console.log('Setting auth state with user and token:', { user, token }); // Debug log\r\n        setAuth({ user, token }); // Update auth state\r\n        localStorage.setItem('token', token); // Persist token\r\n        localStorage.setItem('user', JSON.stringify(user)); // Persist user data\r\n\r\n        fetchUserData(token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser (null);\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const token = localStorage.getItem('refreshToken');\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', { token });\r\n            const { accessToken } = response.data;\r\n\r\n            // Update token in context and localStorage\r\n            setAuth((prevAuth) => ({ ...prevAuth, token: accessToken }));\r\n            localStorage.setItem('token', accessToken);\r\n        } catch (error) {\r\n            console.error('Token refresh failed:', error);\r\n            logout(); // Log out if refresh fails\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            fetchUserData(token);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,aAAa,GAAG,MAAOF,KAAK,IAAK;IACnCG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,mDAAmD,EAAE;QAClFC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAChD,CAAC,CAAC;MACFQ,OAAO,CAAEC,QAAQ,KAAM;QACnB,GAAGA,QAAQ;QACXX,IAAI,EAAEM,QAAQ,CAACM;MACnB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDE,eAAe,CAACF,KAAK,CAAC;IAC1B,CAAC,SAAS;MACNR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMU,eAAe,GAAIF,KAAK,IAAK;IAC/B,IACIA,KAAK,CAACP,QAAQ,IACdO,KAAK,CAACP,QAAQ,CAACU,MAAM,KAAK,GAAG,KAC5BH,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACK,OAAO,KAAK,eAAe,IAAIJ,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACK,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC,EACtG;MACEC,KAAK,CAAC,wEAAwE,CAAC;MAC/EC,MAAM,CAAC,CAAC;IACZ,CAAC,MAAM;MACHN,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACI,OAAO,CAAC;IACpE;EACJ,CAAC;EAED,MAAMI,WAAW,GAAG,MAAOC,WAAW,IAAK;IACvCR,OAAO,CAACS,GAAG,CAAC,oBAAoB,EAAED,WAAW,CAAC;IAC9C,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMb,KAAK,CAAC+B,IAAI,CAAC,4CAA4C,EAAEF,WAAW,CAAC;MAC5FR,OAAO,CAACS,GAAG,CAAC,iBAAiB,EAAEjB,QAAQ,CAACM,IAAI,CAAC;;MAE7C;MACA,MAAM;QAAEZ,IAAI;QAAEE;MAAM,CAAC,GAAGI,QAAQ,CAACM,IAAI;MACrC,IAAI,CAACZ,IAAI,IAAI,CAACE,KAAK,EAAE;QACjB,MAAM,IAAIuB,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MAEAC,KAAK,CAAC1B,IAAI,EAAEE,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;MAAA,IAAAc,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACZf,OAAO,CAACD,KAAK,CAAC,eAAe,EAAE,EAAAc,eAAA,GAAAd,KAAK,CAACP,QAAQ,cAAAqB,eAAA,uBAAdA,eAAA,CAAgBf,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;MACrEE,KAAK,CAAC,EAAAS,gBAAA,GAAAf,KAAK,CAACP,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,iCAAiC,CAAC;IAC7E;EACJ,CAAC;EAGD,MAAMS,KAAK,GAAGA,CAACI,QAAQ,EAAEC,WAAW,KAAK;IACrC9B,OAAO,CAAE6B,QAAQ,CAAC;IAClB3B,QAAQ,CAAC4B,WAAW,CAAC;IACrB,IAAI,CAAC7B,KAAK,IAAIA,KAAK,CAAC8B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BlB,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;MACrDM,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACJ;IAEAL,OAAO,CAACS,GAAG,CAAC,yCAAyC,EAAE;MAAEvB,IAAI;MAAEE;IAAM,CAAC,CAAC,CAAC,CAAC;IACzEQ,OAAO,CAAC;MAAEV,IAAI;MAAEE;IAAM,CAAC,CAAC,CAAC,CAAC;IAC1B+B,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhC,KAAK,CAAC,CAAC,CAAC;IACtC+B,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEpDI,aAAa,CAACF,KAAK,CAAC;EACxB,CAAC;EAED,MAAMkB,MAAM,GAAGA,CAAA,KAAM;IACjBnB,OAAO,CAAE,IAAI,CAAC;IACdE,QAAQ,CAAC,IAAI,CAAC;IACd8B,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCJ,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMpC,KAAK,GAAG+B,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI;MACA,MAAMjC,QAAQ,GAAG,MAAMb,KAAK,CAAC+B,IAAI,CAAC,oDAAoD,EAAE;QAAEtB;MAAM,CAAC,CAAC;MAClG,MAAM;QAAE6B;MAAY,CAAC,GAAGzB,QAAQ,CAACM,IAAI;;MAErC;MACAF,OAAO,CAAEC,QAAQ,KAAM;QAAE,GAAGA,QAAQ;QAAET,KAAK,EAAE6B;MAAY,CAAC,CAAC,CAAC;MAC5DE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,WAAW,CAAC;IAC9C,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CO,MAAM,CAAC,CAAC,CAAC,CAAC;IACd;EACJ,CAAC;EAGD5B,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAG+B,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIrC,KAAK,EAAE;MACPE,aAAa,CAACF,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACZ,MAAMgD,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BH,YAAY,CAAC,CAAC;IAClB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAElB,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI7C,OAAA,CAACC,WAAW,CAAC+C,QAAQ;IAACC,KAAK,EAAE;MAAE5C,IAAI;MAAEE,KAAK;MAAEwB,KAAK;MAAEN;IAAO,CAAE;IAAAtB,QAAA,EACvDA;EAAQ;IAAA+C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACjD,EAAA,CAnHWF,YAAY;AAAAoD,EAAA,GAAZpD,YAAY;AAqHzB,OAAO,MAAMqD,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7D,UAAU,CAACM,WAAW,CAAC;AAAA;AAACuD,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}