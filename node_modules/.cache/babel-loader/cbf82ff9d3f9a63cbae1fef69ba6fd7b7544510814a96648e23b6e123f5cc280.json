{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst safeParse = data => {\n  try {\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Failed to parse JSON:', error);\n    return null;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: null,\n    user: null\n  });\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const fetchUserData = async () => {\n    const token = getToken(); // Use getToken to retrieve the token\n    if (!token) {\n      console.error('No token found. Cannot fetch user data.');\n      return;\n    }\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('User data:', response.data);\n      setAuth(prev => ({\n        ...prev,\n        user: response.data\n      }));\n    } catch (error) {\n      handleAuthError(error);\n    }\n  };\n  const refreshToken = async () => {\n    const token = getToken(); // Use getToken to retrieve the refresh token\n    if (!token) {\n      console.error('No refresh token found.');\n      logout();\n      return;\n    }\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\n        token\n      });\n      const {\n        accessToken\n      } = response.data;\n      localStorage.setItem('token', accessToken);\n      setAuth(prev => ({\n        ...prev,\n        token: accessToken\n      }));\n    } catch (error) {\n      handleAuthError(error);\n    }\n  };\n  const handleLogin = async credentials => {\n    if (!credentials.email || !credentials.password) {\n      console.error('Email and password are required');\n      return;\n    }\n    try {\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', credentials, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data && response.data.data.accessToken) {\n        const {\n          user,\n          accessToken\n        } = response.data.data;\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        console.log('Successfully logged in');\n        setAuth({\n          user,\n          token: accessToken\n        });\n        navigate('/dashboard');\n      } else {\n        console.error('No token found in response');\n      }\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    }\n  };\n  const handleAuthError = error => {\n    if (error.response && error.response.status === 401 && (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))) {\n      alert('Your session has expired or the token is invalid. Please log in again.');\n      logout();\n      navigate('/login');\n    } else {\n      console.error('Unexpected authentication error:', error.message);\n    }\n  };\n  const login = (user, token) => {\n    if (user && token) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setAuth({\n        token,\n        user\n      });\n    } else {\n      console.error('Token or user is missing, cannot store.');\n    }\n  };\n  const logout = () => {\n    setAuth({\n      token: null,\n      user: null\n    });\n    setLoading(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found in localStorage');\n    }\n    return token;\n  };\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = safeParse(localStorage.getItem('user'));\n    const currentPath = window.location.pathname; // Get current route\n\n    if (currentPath === '/signup') {\n      // Do not redirect on the signup page\n      setLoading(false);\n      return;\n    }\n    if (storedToken && storedUser) {\n      setAuth({\n        token: storedToken,\n        user: storedUser\n      });\n      fetchUserData(storedToken);\n      navigate('/dashboard');\n    } else {\n      console.log('No token or user found, redirecting to login');\n      setLoading(false);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      loading,\n      login,\n      logout,\n      handleLogin,\n      getToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"8sHYTCxMXgE4GvGQgwht2zoWZ4k=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","safeParse","data","JSON","parse","error","console","AuthProvider","children","_s","auth","setAuth","token","user","loading","setLoading","navigate","fetchUserData","getToken","response","get","headers","Authorization","log","prev","handleAuthError","refreshToken","logout","post","accessToken","localStorage","setItem","handleLogin","credentials","email","password","stringify","_error$response","_error$response$data","message","status","includes","alert","login","removeItem","getItem","storedToken","storedUser","currentPath","window","location","pathname","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst safeParse = (data) => {\r\n    try {\r\n        return JSON.parse(data);\r\n    } catch (error) {\r\n        console.error('Failed to parse JSON:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    const fetchUserData = async () => {\r\n        const token = getToken(); // Use getToken to retrieve the token\r\n        if (!token) {\r\n            console.error('No token found. Cannot fetch user data.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            console.log('User data:', response.data);\r\n            setAuth((prev) => ({ ...prev, user: response.data }));\r\n        } catch (error) {\r\n            handleAuthError(error);\r\n        }\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const token = getToken(); // Use getToken to retrieve the refresh token\r\n        if (!token) {\r\n            console.error('No refresh token found.');\r\n            logout();\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\r\n                token,\r\n            });\r\n            const { accessToken } = response.data;\r\n            localStorage.setItem('token', accessToken);\r\n            setAuth((prev) => ({ ...prev, token: accessToken }));\r\n        } catch (error) {\r\n            handleAuthError(error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleLogin = async (credentials) => {\r\n        if (!credentials.email || !credentials.password) {\r\n            console.error('Email and password are required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'https://api.freeapi.app/api/v1/users/login',\r\n                credentials,\r\n                { headers: { 'Content-Type': 'application/json' } }\r\n            );\r\n\r\n            if (response.data && response.data.data.accessToken) {\r\n                const { user, accessToken } = response.data.data;\r\n                localStorage.setItem('token', accessToken);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                console.log('Successfully logged in');\r\n                setAuth({ user, token: accessToken });\r\n                navigate('/dashboard');\r\n            } else {\r\n                console.error('No token found in response');\r\n            }\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response?.data?.message || error.message);\r\n        }\r\n    };\r\n\r\n    const handleAuthError = (error) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))\r\n        ) {\r\n            alert('Your session has expired or the token is invalid. Please log in again.');\r\n            logout();\r\n            navigate('/login');\r\n        } else {\r\n            console.error('Unexpected authentication error:', error.message);\r\n        }\r\n    };\r\n\r\n    const login = (user, token) => {\r\n        if (user && token) {\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            setAuth({ token, user });\r\n        } else {\r\n            console.error('Token or user is missing, cannot store.');\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuth({ token: null, user: null });\r\n        setLoading(false);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        navigate('/login');\r\n    };\r\n\r\n    const getToken = () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            console.log('No token found in localStorage');\r\n        }\r\n        return token;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        const storedUser = safeParse(localStorage.getItem('user'));\r\n        const currentPath = window.location.pathname; // Get current route\r\n\r\n        if (currentPath === '/signup') {\r\n            // Do not redirect on the signup page\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        if (storedToken && storedUser) {\r\n            setAuth({ token: storedToken, user: storedUser });\r\n            fetchUserData(storedToken);\r\n            navigate('/dashboard');\r\n        } else {\r\n            console.log('No token or user found, redirecting to login');\r\n            setLoading(false);\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, loading, login, logout, handleLogin, getToken }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}