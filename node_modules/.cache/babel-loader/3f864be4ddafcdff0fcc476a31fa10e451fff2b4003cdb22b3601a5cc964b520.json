{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[auth,setAuth]=useState({token:null,user:null});const navigate=useNavigate();const getToken=()=>{return localStorage.getItem('token');};const handleLogin=async credentials=>{try{const mockUserData={token:'mock-jwt-token',user:{id:'1',email:credentials.email,name:'Test User'}};setAuth({token:mockUserData.token,user:mockUserData.user,isAuthenticated:true});localStorage.setItem('token',mockUserData.token);localStorage.setItem('user',JSON.stringify(mockUserData.user));navigate('/dashboard');return mockUserData;}catch(error){const errorMessage='Login service unavailable - using mock authentication';console.info('Development mode:',errorMessage);throw new Error(errorMessage);}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');localStorage.removeItem('isAuthenticated');setAuth({user:null,token:null,isAuthenticated:false});navigate('/login',{replace:true});};useEffect(()=>{const token=localStorage.getItem('token');const user=JSON.parse(localStorage.getItem('user'));const isAuthenticated=localStorage.getItem('isAuthenticated');if(token&&user&&isAuthenticated){setAuth({token,user,isAuthenticated:true});}},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{auth,setAuth,handleLogin,getToken,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","auth","setAuth","token","user","navigate","getToken","localStorage","getItem","handleLogin","credentials","mockUserData","id","email","name","isAuthenticated","setItem","JSON","stringify","error","errorMessage","console","info","Error","logout","removeItem","replace","parse","Provider","value","useAuth"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ token: null, user: null });\r\n    const navigate = useNavigate();\r\n\r\n    const getToken = () => {\r\n        return localStorage.getItem('token');\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        try {\r\n            \r\n            const mockUserData = {\r\n                token: 'mock-jwt-token',\r\n                user: {\r\n                    id: '1',\r\n                    email: credentials.email,\r\n                    name: 'Test User'\r\n                }\r\n            };\r\n\r\n            setAuth({\r\n                token: mockUserData.token,\r\n                user: mockUserData.user,\r\n                isAuthenticated: true\r\n            });\r\n\r\n            localStorage.setItem('token', mockUserData.token);\r\n            localStorage.setItem('user', JSON.stringify(mockUserData.user));\r\n            \r\n            navigate('/dashboard');\r\n            return mockUserData;\r\n        } catch (error) {\r\n            const errorMessage = 'Login service unavailable - using mock authentication';\r\n            console.info('Development mode:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };    \r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('isAuthenticated');\r\n        setAuth({ user: null, token: null, isAuthenticated: false });\r\n        navigate('/login', { replace: true });\r\n    };    \r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n\r\n        if (token && user && isAuthenticated) {\r\n            setAuth({\r\n                token,\r\n                user,\r\n                isAuthenticated: true\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth,\r\n            setAuth,\r\n            handleLogin,\r\n            getToken,\r\n            logout\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAS,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,CAAEY,KAAK,CAAE,IAAI,CAAEC,IAAI,CAAE,IAAK,CAAC,CAAC,CAC7D,KAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,QAAQ,CAAGA,CAAA,GAAM,CACnB,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxC,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,WAAW,EAAK,CACvC,GAAI,CAEA,KAAM,CAAAC,YAAY,CAAG,CACjBR,KAAK,CAAE,gBAAgB,CACvBC,IAAI,CAAE,CACFQ,EAAE,CAAE,GAAG,CACPC,KAAK,CAAEH,WAAW,CAACG,KAAK,CACxBC,IAAI,CAAE,WACV,CACJ,CAAC,CAEDZ,OAAO,CAAC,CACJC,KAAK,CAAEQ,YAAY,CAACR,KAAK,CACzBC,IAAI,CAAEO,YAAY,CAACP,IAAI,CACvBW,eAAe,CAAE,IACrB,CAAC,CAAC,CAEFR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAEL,YAAY,CAACR,KAAK,CAAC,CACjDI,YAAY,CAACS,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,YAAY,CAACP,IAAI,CAAC,CAAC,CAE/DC,QAAQ,CAAC,YAAY,CAAC,CACtB,MAAO,CAAAM,YAAY,CACvB,CAAE,MAAOQ,KAAK,CAAE,CACZ,KAAM,CAAAC,YAAY,CAAG,uDAAuD,CAC5EC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAEF,YAAY,CAAC,CAC/C,KAAM,IAAI,CAAAG,KAAK,CAACH,YAAY,CAAC,CACjC,CACJ,CAAC,CAED,KAAM,CAAAI,MAAM,CAAGA,CAAA,GAAM,CACjBjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC,CAChClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC,CAC/BlB,YAAY,CAACkB,UAAU,CAAC,iBAAiB,CAAC,CAC1CvB,OAAO,CAAC,CAAEE,IAAI,CAAE,IAAI,CAAED,KAAK,CAAE,IAAI,CAAEY,eAAe,CAAE,KAAM,CAAC,CAAC,CAC5DV,QAAQ,CAAC,QAAQ,CAAE,CAAEqB,OAAO,CAAE,IAAK,CAAC,CAAC,CACzC,CAAC,CAEDlC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAW,KAAK,CAAGI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAJ,IAAI,CAAGa,IAAI,CAACU,KAAK,CAACpB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACrD,KAAM,CAAAO,eAAe,CAAGR,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAE/D,GAAIL,KAAK,EAAIC,IAAI,EAAIW,eAAe,CAAE,CAClCb,OAAO,CAAC,CACJC,KAAK,CACLC,IAAI,CACJW,eAAe,CAAE,IACrB,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACInB,IAAA,CAACC,WAAW,CAAC+B,QAAQ,EAACC,KAAK,CAAE,CACzB5B,IAAI,CACJC,OAAO,CACPO,WAAW,CACXH,QAAQ,CACRkB,MACJ,CAAE,CAAAxB,QAAA,CACGA,QAAQ,CACS,CAAC,CAE/B,CAAC,CACD,MAAO,MAAM,CAAA8B,OAAO,CAAGA,CAAA,GAAMxC,UAAU,CAACO,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}