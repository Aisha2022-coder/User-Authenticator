{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    auth,\n    loading\n  } = useAuth();\n  const {\n    getToken\n  } = useAuth(); // Get the getToken function from AuthContext\n  const token = getToken(); // Retrieve the token\n\n  if (!(auth !== null && auth !== void 0 && auth.token)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  if (!token) {\n    console.warn('No token found. Redirecting to login.'); // Log a warning if no token is found\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this); // Redirect to login page if no token\n  }\n  return children; // Render the protected route if token exists\n};\n_s(ProtectedRoute, \"2m3USnu1CY28a6JXcHxS2qlpkdM=\", false, function () {\n  return [useAuth, useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","auth","loading","getToken","token","to","fileName","_jsxFileName","lineNumber","columnNumber","console","warn","_c","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { auth, loading } = useAuth();\r\n    const { getToken } = useAuth(); // Get the getToken function from AuthContext\r\n    const token = getToken(); // Retrieve the token\r\n\r\n    if (!auth?.token) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n    if (!token) {\r\n        console.warn('No token found. Redirecting to login.'); // Log a warning if no token is found\r\n        return <Navigate to=\"/login\" />; // Redirect to login page if no token\r\n    }\r\n\r\n    return children; // Render the protected route if token exists\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EACnC,MAAM;IAAEQ;EAAS,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMS,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1B,IAAI,EAACF,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,KAAK,GAAE;IACd,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EACA,IAAI,CAACL,KAAK,EAAE;IACRM,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;IACvD,oBAAOd,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACrC;EAEA,OAAOV,QAAQ,CAAC,CAAC;AACrB,CAAC;AAACC,EAAA,CAdIF,cAAc;EAAA,QACUH,OAAO,EACZA,OAAO;AAAA;AAAAiB,EAAA,GAF1Bd,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}