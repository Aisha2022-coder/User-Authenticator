{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    token: null\n  });\n  const login = (user, token) => {\n    setAuth({\n      user,\n      token\n    });\n    localStorage.setItem('token', token);\n  };\n  const logout = () => {\n    setAuth({\n      user: null,\n      token: null\n    });\n    localStorage.removeItem('token');\n  };\n  const refreshToken = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', {\n          token\n        });\n        setAuth(prev => ({\n          ...prev,\n          token: response.data.token\n        }));\n        localStorage.setItem('token', response.data.token);\n      } catch (error) {\n        console.error('Token refresh failed:', error);\n        logout(); // Logout if refresh fails\n      }\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // Refresh token every 15 minutes\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"y9o0mRlpew/Zw92NBvGSmBRBBY8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","user","token","login","localStorage","setItem","logout","removeItem","refreshToken","getItem","response","post","prev","data","error","console","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ user: null, token: null });\r\n\r\n    const login = (user, token) => {\r\n        setAuth({ user, token });\r\n        localStorage.setItem('token', token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuth({ user: null, token: null });\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const response = await axios.post('https://api.freeapi.app/api/v1/users/refresh-token', { token });\r\n                setAuth((prev) => ({ ...prev, token: response.data.token }));\r\n                localStorage.setItem('token', response.data.token);\r\n            } catch (error) {\r\n                console.error('Token refresh failed:', error);\r\n                logout(); // Logout if refresh fails\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000); // Refresh token every 15 minutes\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EAE7D,MAAMC,KAAK,GAAGA,CAACF,IAAI,EAAEC,KAAK,KAAK;IAC3BF,OAAO,CAAC;MAAEC,IAAI;MAAEC;IAAM,CAAC,CAAC;IACxBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;EACxC,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBN,OAAO,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACpCE,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMN,KAAK,GAAGE,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIP,KAAK,EAAE;MACP,IAAI;QACA,MAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,oDAAoD,EAAE;UAAET;QAAM,CAAC,CAAC;QAClGF,OAAO,CAAEY,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEV,KAAK,EAAEQ,QAAQ,CAACG,IAAI,CAACX;QAAM,CAAC,CAAC,CAAC;QAC5DE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEK,QAAQ,CAACG,IAAI,CAACX,KAAK,CAAC;MACtD,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CR,MAAM,CAAC,CAAC,CAAC,CAAC;MACd;IACJ;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BT,YAAY,CAAC,CAAC;IAClB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEpB,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEI,KAAK;MAAEG;IAAO,CAAE;IAAAT,QAAA,EAChDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC1B,EAAA,CAxCWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA0CzB,OAAO,MAAM8B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOtC,UAAU,CAACM,WAAW,CAAC;AAClC,CAAC;AAACgC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}