{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { useAuth } from './AuthContext'; // Import useAuth from context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate(); // Navigate to other routes\n  const {\n    login\n  } = useAuth(); // Access login function from context\n\n  // Initial form values\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n\n  // Form validation schema\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  // Handle form submission\n  const handleSubmit = async (values, {\n    setSubmitting,\n    setFieldError\n  }) => {\n    console.log('Submitting form with values:', values); // Log the values being submitted\n\n    try {\n      // Make the API call to the login endpoint\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', values, {\n        headers: {\n          'Content-Type': 'application/json' // Ensure the content type is set to JSON\n        }\n      });\n      console.log('API Response:', response.data); // Log the full response\n\n      // Extract user and tokens from the response data\n      const {\n        user\n      } = response.data.data; // Extract user object\n      const accessToken = response.data.data.accessToken; // Extract access token\n      const refreshToken = response.data.data.refreshToken; // Extract refresh token\n\n      // Check if user and tokens are defined\n      if (!user || !accessToken || !refreshToken) {\n        throw new Error('Invalid response from server');\n      }\n      console.log('User :', user, 'Access Token:', accessToken, 'Refresh Token:', refreshToken);\n\n      // Call the login function from context to save user and tokens\n      login(user, accessToken, refreshToken);\n\n      // Redirect to the dashboard after successful login\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login failed:', error.response ? error.response.data : error.message);\n\n      // Handle specific errors based on response\n      if (error.response) {\n        if (error.response.status === 422) {\n          alert('Received data is not valid. Please check your input.');\n        } else if (error.response.status === 404) {\n          alert('User  does not exist. Please check your email and try again.');\n        } else if (error.response.status === 401) {\n          setFieldError('email', 'Invalid email or password');\n          setFieldError('password', 'Invalid email or password');\n        } else {\n          alert('An unexpected error occurred. Please try again later.');\n        }\n      } else {\n        alert('Failed to connect to the server. Please check your network connection.');\n      }\n    } finally {\n      setSubmitting(false); // Stop form submission spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md p-8 bg-white rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-6\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Enter your email\",\n              className: \"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"text-red-500 text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Enter your password\",\n              className: \"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"text-red-500 text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `w-full py-2 text-white font-bold rounded-md ${isSubmitting ? 'bg-blue-300 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300'}`,\n            children: isSubmitting ? 'Logging in...' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"sN4LvqGaoySlBpnUspPencFbx08=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","navigate","login","initialValues","email","password","validationSchema","object","string","required","handleSubmit","values","setSubmitting","setFieldError","console","log","response","post","headers","data","user","accessToken","refreshToken","Error","error","message","status","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isSubmitting","htmlFor","type","name","id","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport { useAuth } from './AuthContext'; // Import useAuth from context\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate(); // Navigate to other routes\r\n    const { login } = useAuth(); // Access login function from context\r\n\r\n    // Initial form values\r\n    const initialValues = { email: '', password: '' };\r\n\r\n    // Form validation schema\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Email is required'),\r\n        password: Yup.string().required('Password is required'),\r\n    });\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (values, { setSubmitting, setFieldError }) => {\r\n        console.log('Submitting form with values:', values); // Log the values being submitted\r\n    \r\n        try {\r\n            // Make the API call to the login endpoint\r\n            const response = await axios.post('https://api.freeapi.app/api/v1/users/login', values, {\r\n                headers: {\r\n                    'Content-Type': 'application/json', // Ensure the content type is set to JSON\r\n                },\r\n            });\r\n    \r\n            console.log('API Response:', response.data); // Log the full response\r\n    \r\n            // Extract user and tokens from the response data\r\n            const { user } = response.data.data; // Extract user object\r\n            const accessToken = response.data.data.accessToken; // Extract access token\r\n            const refreshToken = response.data.data.refreshToken; // Extract refresh token\r\n    \r\n            // Check if user and tokens are defined\r\n            if (!user || !accessToken || !refreshToken) {\r\n                throw new Error('Invalid response from server');\r\n            }\r\n    \r\n            console.log('User :', user, 'Access Token:', accessToken, 'Refresh Token:', refreshToken);\r\n            \r\n            // Call the login function from context to save user and tokens\r\n            login(user, accessToken, refreshToken);\r\n            \r\n            // Redirect to the dashboard after successful login\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response ? error.response.data : error.message);\r\n            \r\n            // Handle specific errors based on response\r\n            if (error.response) {\r\n                if (error.response.status === 422) {\r\n                    alert('Received data is not valid. Please check your input.');\r\n                } else if (error.response.status === 404) {\r\n                    alert('User  does not exist. Please check your email and try again.');\r\n                } else if (error.response.status === 401) {\r\n                    setFieldError('email', 'Invalid email or password');\r\n                    setFieldError('password', 'Invalid email or password');\r\n                } else {\r\n                    alert('An unexpected error occurred. Please try again later.');\r\n                }\r\n            } else {\r\n                alert('Failed to connect to the server. Please check your network connection.');\r\n            }\r\n        } finally {\r\n            setSubmitting(false); // Stop form submission spinner\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n            <div className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-md\">\r\n                <h2 className=\"text-2xl font-bold text-center mb-6\">Login</h2>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ isSubmitting }) => (\r\n                        <Form className=\"space-y-4\">\r\n                            {/* Email Field */}\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                    Email\r\n                                </label>\r\n                                <Field\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder=\"Enter your email\"\r\n                                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-300\"\r\n                                />\r\n                                <ErrorMessage name=\"email\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                            </div>\r\n\r\n                            {/* Password Field */}\r\n                            <div>\r\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                    Password\r\n                                </label>\r\n                                <Field\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"Enter your password\"\r\n                                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-300\"\r\n                                />\r\n                                <ErrorMessage name=\"password\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                            </div>\r\n\r\n                            {/* Submit Button */}\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting}\r\n                                className={`w-full py-2 text-white font-bold rounded-md ${\r\n                                    isSubmitting\r\n                                        ? 'bg-blue-300 cursor-not-allowed'\r\n                                        : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300'\r\n                                }`}\r\n                            >\r\n                                {isSubmitting ? 'Logging in...' : 'Login'}\r\n                            </button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}