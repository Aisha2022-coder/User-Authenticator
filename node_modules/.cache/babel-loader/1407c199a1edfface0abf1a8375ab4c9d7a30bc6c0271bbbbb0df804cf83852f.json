{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    token: null\n  });\n  const [loading, setLoading] = useState(false);\n  const fetchUserData = async token => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAuth(prevAuth => ({\n        ...prevAuth,\n        user: response.data\n      }));\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      handleAuthError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAuthError = error => {\n    if (error.response && error.response.status === 401 && (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))) {\n      alert('Your session has expired or the token is invalid. Please log in again.');\n      logout();\n    } else {\n      console.error('Unexpected authentication error:', error.message);\n    }\n  };\n  const handleLogin = async credentials => {\n    // Log the credentials to debug\n    console.log('Login credentials:', credentials);\n    try {\n      // Make the login API call\n      const response = await axios.post('https://api.freeapi.app/api/v1/users/login', {\n        email: credentials.email,\n        password: credentials.password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Log the API response to ensure the token and user are returned\n      console.log('API Response:', response.data);\n      if (!response.data || !response.data.token) {\n        throw new Error('Invalid response from login API.');\n      }\n\n      // Call the login function with the token and user details\n      login(response.data.user, response.data.token);\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        alert('Invalid email or password. Please check your credentials.');\n      } else {\n        alert('Failed to log in. Please try again later.');\n      }\n    }\n  };\n  const login = (user, token) => {\n    console.log('Login function called with:', {\n      user,\n      token\n    });\n    if (!token || token.trim() === '') {\n      console.error('Invalid token provided during login.');\n      alert('Login failed. Please try again.');\n      return;\n    }\n    setAuth({\n      user,\n      token\n    });\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    fetchUserData(token);\n  };\n  const logout = () => {\n    setAuth({\n      user: null,\n      token: null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const refreshToken = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await axios.post('https://api.freeapi.app/users/refresh-token', {\n          token\n        });\n        const newToken = response.data.token;\n        if (!newToken || newToken.trim() === '') {\n          throw new Error('Empty token received from refresh API.');\n        }\n        setAuth(prev => ({\n          ...prev,\n          token: newToken\n        }));\n        localStorage.setItem('token', newToken);\n      } catch (error) {\n        console.error('Token refresh failed:', error);\n        handleAuthError(error);\n      }\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserData(token);\n    }\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      handleLogin,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"TN6G6+ueqrWdINoksWB1O/QUWf8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","user","token","loading","setLoading","fetchUserData","response","get","headers","Authorization","prevAuth","data","error","console","handleAuthError","status","message","includes","alert","logout","handleLogin","credentials","log","post","email","password","Error","login","_error$response","_error$response2","trim","localStorage","setItem","JSON","stringify","removeItem","refreshToken","getItem","newToken","prev","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ user: null, token: null });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchUserData = async (token) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get('https://api.freeapi.app/api/v1/users/current-user', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setAuth((prevAuth) => ({\r\n                ...prevAuth,\r\n                user: response.data,\r\n            }));\r\n        } catch (error) {\r\n            console.error('Failed to fetch user data:', error);\r\n            handleAuthError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAuthError = (error) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            (error.response.data.message === 'jwt malformed' || error.response.data.message.includes('expired'))\r\n        ) {\r\n            alert('Your session has expired or the token is invalid. Please log in again.');\r\n            logout();\r\n        } else {\r\n            console.error('Unexpected authentication error:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleLogin = async (credentials) => {\r\n        // Log the credentials to debug\r\n        console.log('Login credentials:', credentials);\r\n\r\n        try {\r\n            // Make the login API call\r\n            const response = await axios.post(\r\n                'https://api.freeapi.app/api/v1/users/login',\r\n                {\r\n                    email: credentials.email,\r\n                    password: credentials.password,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            // Log the API response to ensure the token and user are returned\r\n            console.log('API Response:', response.data);\r\n\r\n            if (!response.data || !response.data.token) {\r\n                throw new Error('Invalid response from login API.');\r\n            }\r\n\r\n            // Call the login function with the token and user details\r\n            login(response.data.user, response.data.token);\r\n        } catch (error) {\r\n            console.error('Login failed:', error.response?.data || error.message);\r\n\r\n            if (error.response?.status === 401) {\r\n                alert('Invalid email or password. Please check your credentials.');\r\n            } else {\r\n                alert('Failed to log in. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const login = (user, token) => {\r\n        console.log('Login function called with:', { user, token });\r\n\r\n        if (!token || token.trim() === '') {\r\n            console.error('Invalid token provided during login.');\r\n            alert('Login failed. Please try again.');\r\n            return;\r\n        }\r\n\r\n        setAuth({ user, token });\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        fetchUserData(token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuth({ user: null, token: null });\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    const refreshToken = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const response = await axios.post('https://api.freeapi.app/users/refresh-token', { token });\r\n                const newToken = response.data.token;\r\n                if (!newToken || newToken.trim() === '') {\r\n                    throw new Error('Empty token received from refresh API.');\r\n                }\r\n                setAuth((prev) => ({ ...prev, token: newToken }));\r\n                localStorage.setItem('token', newToken);\r\n            } catch (error) {\r\n                console.error('Token refresh failed:', error);\r\n                handleAuthError(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            fetchUserData(token);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            refreshToken();\r\n        }, 15 * 60 * 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, handleLogin, logout, loading }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}