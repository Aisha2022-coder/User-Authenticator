{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aisha\\\\OneDrive\\\\Desktop\\\\Auth Dashboard\\\\auth-dashboard\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    auth,\n    loading\n  } = useAuth(); // Destructure both auth and loading from useAuth\n  console.log('Token in ProtectedRoute:', localStorage.getItem('token')); // Log token here\n\n  // Show loading indicator while the authentication state is being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If no token is available, redirect to login\n  if (!(auth !== null && auth !== void 0 && auth.token)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If there's a valid token, render the children (protected content)\n  return children;\n};\n_s(ProtectedRoute, \"zDUerETsLYytWvKPiVgJpHdy52g=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","auth","loading","console","log","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","token","to","_c","$RefreshReg$"],"sources":["C:/Users/aisha/OneDrive/Desktop/Auth Dashboard/auth-dashboard/src/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { auth, loading } = useAuth();  // Destructure both auth and loading from useAuth\r\n    console.log('Token in ProtectedRoute:', localStorage.getItem('token')); // Log token here\r\n\r\n    // Show loading indicator while the authentication state is being fetched\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // If no token is available, redirect to login\r\n    if (!auth?.token) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // If there's a valid token, render the children (protected content)\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC,CAAE;EACtCQ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;EAExE;EACA,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;;EAEA;EACA,IAAI,EAACT,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEU,KAAK,GAAE;IACd,oBAAOd,OAAA,CAACH,QAAQ;MAACkB,EAAE,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,OAAOX,QAAQ;AACnB,CAAC;AAACC,EAAA,CAhBIF,cAAc;EAAA,QACUH,OAAO;AAAA;AAAAkB,EAAA,GAD/Bf,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}